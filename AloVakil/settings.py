"""
Django settings for AloVakil project.

Generated by 'django-admin startproject' using Django 5.2.5.
"""
import os
from datetime import timedelta
from pathlib import Path
import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

FIREBASE_CREDENTIALS_JSON = os.path.join(BASE_DIR, "config", "firebase.json")  # اگر از os.path استفاده میکنی

env = environ.Env(
    DEBUG=(bool, False)
)

# خواندن .env از BASE_DIR
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))

SECRET_KEY = env('SECRET_KEY')
DEBUG = env.bool('DEBUG', default=False)

# IDPay config
IDPAY_API_KEY = env.str("IDPAY_API_KEY", default=None)
IDPAY_SANDBOX = env.bool("IDPAY_SANDBOX", default=True)
IDPAY_API_URL = env.str("IDPAY_API_URL", default="https://api.idpay.ir/v1.1")
PAYMENT_AMOUNT_MULTIPLIER = env.int("PAYMENT_AMOUNT_MULTIPLIER", default=1)

# SMS
SMS_API_KEY = env.str("SMS_API_KEY", default=None)

# DB example
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': env.str("DB_NAME"),
        'USER': env.str("DB_USER"),
        'PASSWORD': env.str("DB_PASSWORD"),
        'HOST': env.str("DB_HOST", default='localhost'),
        'PORT': env.str("DB_PORT", default='5432'),
    }
}
MEDIA_URL = '/media/'  # URL برای دسترسی به فایل‌ها
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Quick-start development settings - unsuitable for production


ALLOWED_HOSTS = []

CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",  
]

ASGI_APPLICATION = "AloVakil.asgi.application"
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {"hosts": [("127.0.0.1", 6379)]},
    },
}

# Application definition
INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",

    # Third-party
    'rest_framework',
    'rest_framework_simplejwt',
    'corsheaders',
    'rest_framework_simplejwt.token_blacklist',
    'drf_spectacular',
    'django_filters',

    # Local apps
    'users',
    'cases',
    'payments',
    'notifications',
    'common',
    'appointments',
    'searchs',
    'chat',
    'categories',
    'rating_and_reviews',
    'ai_assistant',
    
]

REST_FRAMEWORK = {
    # Authentication رو مطابق پروژه تنظیم کن (نمونه با Simple JWT)
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.SessionAuthentication',  # در صورت نیاز
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',  # پیش‌فرض؛ اگر می‌خواهی docs عمومی باشد، می‌توانی AllowAny تنظیم کنی
    ),
    # استفاده از drf-spectacular برای تولید schema
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
    # (در صورت استفاده از pagination پیش‌فرض)
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10,
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=15),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': True,
}


SPECTACULAR_SETTINGS = {
    'TITLE': 'AloVakil API',
    'DESCRIPTION': 'API documentation for AloVakil (MVP)',
    'VERSION': '1.0.0',
    # اضافه کردن پشتیبانی از Bearer JWT در docs
    'SECURITY': [{'BearerAuth': []}],
    'COMPONENT_SPLIT_REQUEST': True,
    'CONTACT': {
        'name': 'AloVakil Team',
        'email': 'no-reply@alovakil.com'
    },
    'SERVERS': [
        {'url': 'http://localhost:8000', 'description': 'Local dev'}
    ],
    'SWAGGER_UI_SETTINGS': {
        'deepLinking': True,
    },
    'SWAGGER_UI_DIST': 'https://cdn.jsdelivr.net/npm/swagger-ui-dist@3.52.5',  # optional
    'MARSHmallow': False,
    'SCHEMA_PATH_PREFIX': r'/api',  # اگر API ها همگی با /api/ شروع می‌شوند
    'SECURITY_SCHEMES': {
        'BearerAuth': {
            'type': 'http',
            'scheme': 'bearer',
            'bearerFormat': 'JWT',
        },
    },
}


MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",   # ← بهتره این قبل از CommonMiddleware باشه
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "AloVakil.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "AloVakil.wsgi.application"



# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {"NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"},
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]


# Internationalization
LANGUAGE_CODE = "en-us"
TIME_ZONE = "UTC"
USE_I18N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
STATIC_URL = "static/"

# Default primary key field type
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Custom user model
AUTH_USER_MODEL = "users.User"


#Email sets

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'


USE_INMEMORY = os.getenv("USE_INMEMORY_CHANNEL_LAYER", "true").lower() == "true"

if USE_INMEMORY:
    # برای توسعه لوکال بدون Redis
    CHANNEL_LAYERS = {
        "default": {
            "BACKEND": "channels.layers.InMemoryChannelLayer",
        }
    }
else:
    # برای وقتی Redis راه‌اندازی شد
    CHANNEL_LAYERS = {
        "default": {
            "BACKEND": "channels_redis.core.RedisChannelLayer",
            "CONFIG": {"hosts": [("127.0.0.1", 6379)]},
        },
    }

SMS_SENDER = "1000596446"

ELASTICSEARCH_DSL = {
    'default': {
        'hosts': env.str('ELASTICSEARCH_HOST', default='localhost:9200')
    },
}

# Redis (Cache + Celery Broker)
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": env.str("REDIS_URL", default="redis://127.0.0.1:6379/1"),
        "OPTIONS": {"CLIENT_CLASS": "django_redis.client.DefaultClient"},
        "KEY_PREFIX": "alovakil"
    }
}

CELERY_BROKER_URL = env.str("REDIS_URL", default="redis://127.0.0.1:6379/0")
CELERY_RESULT_BACKEND = CELERY_BROKER_URL
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'

ASGI_APPLICATION = "AloVakil.asgi.application"

# اگر می‌خوای روی Redis باشه (production / real-time)
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {"hosts": [("127.0.0.1", 6379)]},  # یا REDIS_URL از env
    }
}

OPENAI_API_KEY = "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"
