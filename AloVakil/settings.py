"""
Django settings for AloVakil project.

Generated by 'django-admin startproject' using Django 5.2.5.
"""
import os
from datetime import timedelta
from pathlib import Path
import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

FIREBASE_CREDENTIALS_JSON = BASE_DIR / "config" / "firebase.json"

env = environ.Env(
    DEBUG=(bool, False)
)
# ÿÆŸàÿßŸÜÿØŸÜ .env ÿßÿ≤ BASE_DIR
environ.Env.read_env(BASE_DIR / '.env')

_SECRET_KEY_PLACEHOLDER = "django-insecure-placeholder"
SECRET_KEY = env.str('SECRET_KEY', default=_SECRET_KEY_PLACEHOLDER)
DEBUG = env.bool('DEBUG', default=False)

# IDPay config
IDPAY_API_KEY = env.str("IDPAY_API_KEY", default=None)
IDPAY_SANDBOX = env.bool("IDPAY_SANDBOX", default=True)
IDPAY_API_URL = env.str("IDPAY_API_URL", default="https://api.idpay.ir/v1.1")
PAYMENT_AMOUNT_MULTIPLIER = env.int("PAYMENT_AMOUNT_MULTIPLIER", default=1)

# SMS
SMS_API_KEY = env.str("SMS_API_KEY", default=None)

# OAuth configuration
GOOGLE_OAUTH_CLIENT_ID = env.str("GOOGLE_OAUTH_CLIENT_ID", default="test-google-client-id")
GOOGLE_OAUTH_CLIENT_SECRET = env.str("GOOGLE_OAUTH_CLIENT_SECRET", default="test-google-client-secret")
GOOGLE_OAUTH_REDIRECT_URI = env.str(
    "GOOGLE_OAUTH_REDIRECT_URI",
    default="http://localhost:8000/appointments/calendar/oauth/google/callback/",
)
CALENDAR_OAUTH_STATE_TTL = env.int("CALENDAR_OAUTH_STATE_TTL", default=300)

# DB example
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': env.str("DB_NAME", default=""),
        'USER': env.str("DB_USER", default=""),
        'PASSWORD': env.str("DB_PASSWORD", default=""),
        'HOST': env.str("DB_HOST", default='localhost'),
        'PORT': env.str("DB_PORT", default='5432'),
    }
}
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

ALLOWED_HOSTS = []

CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
]

# Application definition
INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",

    # Third-party
    'rest_framework',
    'rest_framework_simplejwt',
    'corsheaders',
    'rest_framework_simplejwt.token_blacklist',
    'drf_spectacular',
    'django_filters',
    'django_elasticsearch_dsl',

    # Local apps
    'users',
    'cases',
    'notifications',
    'common',
    'appointments',
    'payments',
    'searchs',
    'chat',
    'categories',
    'rating_and_reviews',
    'ai_assistant',
    'client_profile',
    'lawyer_profile',
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

# Global Exception Logging
MIDDLEWARE += [
    "common.middleware.GlobalRequestLoggingMiddleware",
]

ROOT_URLCONF = "AloVakil.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "AloVakil.wsgi.application"
ASGI_APPLICATION = "AloVakil.asgi.application"

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {"NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"},
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]

# Internationalization
LANGUAGE_CODE = "en-us"
TIME_ZONE = "UTC"
USE_I18N = True
USE_TZ = True

# Static files
STATIC_URL = "static/"
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Custom user model
AUTH_USER_MODEL = "users.User"

# Email
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = env.str('EMAIL_HOST', default='')
EMAIL_PORT = env.int('EMAIL_PORT', default=587)
EMAIL_HOST_USER = env.str('EMAIL_HOST_USER', default='')
EMAIL_HOST_PASSWORD = env.str('EMAIL_HOST_PASSWORD', default='')
EMAIL_USE_TLS = env.bool('EMAIL_USE_TLS', default=True)
EMAIL_USE_SSL = env.bool('EMAIL_USE_SSL', default=False)
DEFAULT_FROM_EMAIL = env.str('DEFAULT_FROM_EMAIL', default=EMAIL_HOST_USER)

# Channels
USE_INMEMORY = env.bool("USE_INMEMORY_CHANNEL_LAYER", default=True)

if USE_INMEMORY:
    CHANNEL_LAYERS = {
        "default": {"BACKEND": "channels.layers.InMemoryChannelLayer"}
    }
else:
    CHANNEL_LAYERS = {
        "default": {
            "BACKEND": "channels_redis.core.RedisChannelLayer",
            "CONFIG": {"hosts": [("127.0.0.1", 6379)]},
        }
    }

SMS_SENDER = env.str("SMS_SENDER", default="1000596446")

ELASTICSEARCH_DSL = {
    'default': {
        'hosts': 'localhost:9200'  # ŸÖÿ∑ŸÖÿ¶ŸÜ ÿ¥Ÿà ŸæŸàÿ±ÿ™ ÿØÿ±ÿ≥ÿ™ ÿßÿ≥ÿ™
    },
}

# Redis (Cache + Celery Broker)
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": env.str("REDIS_URL", default="redis://127.0.0.1:6379/1"),
        "OPTIONS": {"CLIENT_CLASS": "django_redis.client.DefaultClient"},
        "KEY_PREFIX": "alovakil"
    }
}

CELERY_BROKER_URL = env.str("REDIS_URL", default="redis://127.0.0.1:6379/0")
CELERY_RESULT_BACKEND = CELERY_BROKER_URL
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'

# AI
OPENAI_API_KEY = env.str("OPENAI_API_KEY", default=None)

AI_FREE_DAILY_LIMIT = 10
AI_FREE_MONTHLY_LIMIT = 300
AI_MAX_RETRIES = 3
AI_RETRY_BACKOFF_SECONDS = 1
AI_MODEL_NAME = "gpt-4o-mini"

AI_LIMITS = {
    "client": {"daily": 10, "monthly": 100},
    "lawyer": {"daily": 30, "monthly": 300},
    "default": {"daily": 5, "monthly": 50},
}

# REST Framework
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.SessionAuthentication',  # ÿßÿÆÿ™€åÿßÿ±€åÿõ ÿ®ÿ±ÿß€å dev Ÿà browsable api
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10,

    'DEFAULT_THROTTLE_CLASSES': [
        'rest_framework.throttling.AnonRateThrottle',
        'rest_framework.throttling.UserRateThrottle',
        # ÿß⁄Øÿ± ŸÖ€å‚ÄåÿÆŸàÿßŸá€å OTP ÿ±ÿß ÿ≥ÿ±ÿßÿ≥ÿ±€å ÿßÿπŸÖÿßŸÑ ⁄©ŸÜ€å:
        # 'your_project.throttles.OTPThrottle',
    ],
    'DEFAULT_THROTTLE_RATES': {
        'anon': '20/min',
        'user': '200/min',
        'otp': '3/min',   # ÿßÿ≥ÿ™ŸÅÿßÿØŸá ÿßÿ≤ scope="otp" ÿØÿ± ⁄©ŸÑÿßÿ≥ throttle €åÿß ÿØÿ± view
        'sms_request': '2/min',
        'critical_sms': '2/1m',
    }
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60),   # Ÿæ€åÿ¥ŸÜŸáÿßÿØ: 30-60 ÿØŸÇ€åŸÇŸá ÿ®Ÿáÿ™ÿ± ÿßÿ≥ÿ™ÿõ ÿß⁄Øÿ± 2 ÿ≥ÿßÿπÿ™ ŸÜ€åÿßÿ≤ ÿØÿßÿ±€å ok
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,
    'ALGORITHM': 'HS256',
    'SIGNING_KEY': os.environ.get('JWT_SIGNING_KEY', SECRET_KEY),  # ÿßÿ≤ env ÿßÿ≥ÿ™ŸÅÿßÿØŸá ⁄©ŸÜ
    'AUTH_HEADER_TYPES': ('Bearer',),
    # Additional hardening:
    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_USER_CLASS': 'django.contrib.auth.models.AnonymousUser',
}

SPECTACULAR_SETTINGS = {
    'TITLE': 'AloVakil API',
    'DESCRIPTION': 'API documentation for AloVakil (MVP)',
    'VERSION': '1.0.0',
    'SECURITY': [{'BearerAuth': []}],
    'COMPONENT_SPLIT_REQUEST': True,
    'CONTACT': {'name': 'AloVakil Team', 'email': 'no-reply@alovakil.com'},
    'SERVERS': [{'url': 'http://localhost:8000', 'description': 'Local dev'}],
    'SWAGGER_UI_SETTINGS': {'deepLinking': True},
    'SWAGGER_UI_DIST': 'https://cdn.jsdelivr.net/npm/swagger-ui-dist@3.52.5',
    'MARSHmallow': False,
    'SCHEMA_PATH_PREFIX': r'/api',
    'SECURITY_SCHEMES': {
        'BearerAuth': {'type': 'http', 'scheme': 'bearer', 'bearerFormat': 'JWT'},
    },
}

# ===============================
# üìú Centralized Logging Config
# ===============================
LOG_DIR = BASE_DIR / "logs"
LOG_DIR.mkdir(exist_ok=True)

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "verbose": {"format": "[{asctime}] [{levelname}] [{name}] {message}", "style": "{"},
        "simple": {"format": "[{levelname}] {message}", "style": "{"},
        "json": {"format": '{{"time": "{asctime}", "level": "{levelname}", "logger": "{name}", "msg": "{message}"}}', "style": "{"},
    },
    "handlers": {
        "console": {"class": "logging.StreamHandler", "formatter": "simple"},
        "file_info": {"class": "logging.FileHandler", "filename": LOG_DIR / "info.log", "formatter": "verbose", "level": "INFO"},
        "file_error": {"class": "logging.FileHandler", "filename": LOG_DIR / "errors.log", "formatter": "verbose", "level": "ERROR"},
    },
    "loggers": {
        "django": {"handlers": ["console", "file_error"], "level": "WARNING", "propagate": True},
        "common": {"handlers": ["console", "file_info", "file_error"], "level": "INFO", "propagate": False},
        "notifications": {"handlers": ["console", "file_info", "file_error"], "level": "INFO", "propagate": False},
        "payments": {"handlers": ["console", "file_info", "file_error"], "level": "INFO", "propagate": False},
        "appointments": {"handlers": ["console", "file_info", "file_error"], "level": "INFO", "propagate": False},
        "chat": {"handlers": ["console", "file_info", "file_error"], "level": "INFO", "propagate": False},
        "users": {"handlers": ["console", "file_info", "file_error"], "level": "INFO", "propagate": False},
        "searchs": {"handlers": ["console", "file_info", "file_error"], "level": "INFO", "propagate": False},
        "ai_assistant": {"handlers": ["console", "file_info", "file_error"], "level": "INFO", "propagate": False},
    },
}

CELERY_BROKER_URL = "redis://localhost:6379/0"
CELERY_RESULT_BACKEND = "redis://localhost:6379/0"
CELERY_ACCEPT_CONTENT = ["json"]
CELERY_TASK_SERIALIZER = "json"
CELERY_RESULT_SERIALIZER = "json"
CELERY_TIMEZONE = "Asia/Tehran"


MIDDLEWARE += ["common.middleware.SessionIdleTimeout"]
SESSION_IDLE_TIMEOUT = 60*60*24

SMS_PROVIDER = env.str("SMS_PROVIDER", default="console")
