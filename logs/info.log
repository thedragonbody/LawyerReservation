[2025-10-12 13:11:55,138] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/", "query_params": {}, "body": {}}
[2025-10-12 13:11:55,152] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/", "status_code": 404}
[2025-10-12 13:11:55,374] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/favicon.ico", "query_params": {}, "body": {}}
[2025-10-12 13:11:55,377] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/favicon.ico", "status_code": 404}
[2025-10-12 13:13:12,042] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/", "query_params": {}, "body": {}}
[2025-10-12 13:13:12,045] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/", "status_code": 404}
[2025-10-12 13:13:20,058] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/admin/", "query_params": {}, "body": {}}
[2025-10-12 13:13:20,141] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/admin/", "status_code": 200}
[2025-10-12 13:13:31,262] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/api/docs/", "query_params": {}, "body": {}}
[2025-10-12 13:13:31,288] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/api/docs/", "status_code": 200}
[2025-10-12 13:13:31,370] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/api/schema/", "query_params": {}, "body": {}}
[2025-10-12 13:13:31,444] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/api/schema/", "status_code": 200}
[2025-10-12 13:13:34,383] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/api/docs/", "query_params": {}, "body": {}}
[2025-10-12 13:13:34,384] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/api/docs/", "status_code": 200}
[2025-10-12 13:13:34,540] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/api/schema/", "query_params": {}, "body": {}}
[2025-10-12 13:13:34,585] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/api/schema/", "status_code": 200}
[2025-10-12 13:14:40,273] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/.well-known/appspecific/com.chrome.devtools.json", "query_params": {}, "body": {}}
[2025-10-12 13:14:40,276] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/.well-known/appspecific/com.chrome.devtools.json", "status_code": 404}
[2025-10-12 13:15:45,685] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/", "query_params": {}, "body": {}}
[2025-10-12 13:15:45,689] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/", "status_code": 404}
[2025-10-12 13:15:53,345] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/test-error/", "query_params": {}, "body": {}}
[2025-10-12 13:15:53,346] [ERROR] [common] {"type": "exception", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/test-error/", "query_params": {}, "body": {}, "exception": "division by zero", "traceback": "Traceback (most recent call last):\n  File \"E:\\Python\\Lib\\site-packages\\django\\core\\handlers\\base.py\", line 197, in _get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n  File \"E:\\2VAKIL\\AloVakil\\common\\views.py\", line 5, in test_error\n    1 / 0\n    ~~^~~\nZeroDivisionError: division by zero\n"}
[2025-10-12 13:15:53,391] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/test-error/", "status_code": 500}
[2025-10-13 17:56:48,153] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/", "query_params": {}, "body": {}}
[2025-10-13 17:56:48,167] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/", "status_code": 404}
[2025-10-13 17:56:48,395] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/favicon.ico", "query_params": {}, "body": {}}
[2025-10-13 17:56:48,398] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/favicon.ico", "status_code": 404}
[2025-10-13 17:56:50,047] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/", "query_params": {}, "body": {}}
[2025-10-13 17:56:50,050] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/", "status_code": 404}
[2025-10-13 17:57:10,548] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/categories/", "query_params": {}, "body": {}}
[2025-10-13 17:57:10,676] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/categories/", "status_code": 200}
[2025-10-13 18:05:12,879] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/", "query_params": {}, "body": {}}
[2025-10-13 18:05:12,882] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/", "status_code": 404}
[2025-10-13 18:05:14,181] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/", "query_params": {}, "body": {}}
[2025-10-13 18:05:14,183] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/", "status_code": 404}
[2025-10-13 18:05:55,770] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/appointments/slots/", "query_params": {}, "body": {}}
[2025-10-13 18:05:55,773] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/appointments/slots/", "status_code": 404}
[2025-10-13 18:06:05,607] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/appointments/ dashboard/", "query_params": {}, "body": {}}
[2025-10-13 18:06:05,610] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/appointments/ dashboard/", "status_code": 404}
[2025-10-13 18:06:19,009] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/appointments/dashboard/", "query_params": {}, "body": {}}
[2025-10-13 18:06:19,012] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/appointments/dashboard/", "status_code": 404}
[2025-10-13 18:06:29,944] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/appointments/dashboard/stats/", "query_params": {}, "body": {}}
[2025-10-13 18:06:30,007] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/appointments/dashboard/stats/", "status_code": 200}
[2025-10-13 18:17:29,035] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/appointments/ dashboard/ lawyer/", "query_params": {}, "body": {}}
[2025-10-13 18:17:29,038] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/appointments/ dashboard/ lawyer/", "status_code": 404}
[2025-10-13 18:17:54,171] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/appointments/dashboard/lawyer/", "query_params": {}, "body": {}}
[2025-10-13 18:17:54,182] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/appointments/dashboard/lawyer/", "status_code": 200}
[2025-10-13 19:41:41,526] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/", "query_params": {}, "body": {}}
[2025-10-13 19:41:41,531] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/", "status_code": 404}
[2025-10-13 19:41:43,961] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/", "query_params": {}, "body": {}}
[2025-10-13 19:41:43,964] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/", "status_code": 404}
[2025-10-13 19:41:46,110] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/", "query_params": {}, "body": {}}
[2025-10-13 19:41:46,112] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/", "status_code": 404}
[2025-10-13 19:41:47,248] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/", "query_params": {}, "body": {}}
[2025-10-13 19:41:47,250] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/", "status_code": 404}
[2025-10-13 19:41:47,925] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/", "query_params": {}, "body": {}}
[2025-10-13 19:41:47,928] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/", "status_code": 404}
[2025-10-13 19:41:48,679] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/", "query_params": {}, "body": {}}
[2025-10-13 19:41:48,682] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/", "status_code": 404}
[2025-10-13 19:41:48,916] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/", "query_params": {}, "body": {}}
[2025-10-13 19:41:48,919] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/", "status_code": 404}
[2025-10-13 19:41:49,374] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/", "query_params": {}, "body": {}}
[2025-10-13 19:41:49,376] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/", "status_code": 404}
[2025-10-13 19:41:49,838] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/", "query_params": {}, "body": {}}
[2025-10-13 19:41:49,841] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/", "status_code": 404}
[2025-10-13 19:41:50,366] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/", "query_params": {}, "body": {}}
[2025-10-13 19:41:50,369] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/", "status_code": 404}
[2025-10-13 19:41:50,806] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/", "query_params": {}, "body": {}}
[2025-10-13 19:41:50,809] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/", "status_code": 404}
[2025-10-13 19:41:52,231] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/", "query_params": {}, "body": {}}
[2025-10-13 19:41:52,234] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/", "status_code": 404}
[2025-10-13 19:49:29,179] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/appointments/dashboard/lawyer/", "query_params": {}, "body": {}}
[2025-10-13 19:49:29,215] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/appointments/dashboard/lawyer/", "status_code": 200}
[2025-10-15 12:22:18,340] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/", "query_params": {}, "body": {}}
[2025-10-15 12:22:18,355] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/", "status_code": 404}
[2025-10-15 12:22:18,483] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/favicon.ico", "query_params": {}, "body": {}}
[2025-10-15 12:22:18,487] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/favicon.ico", "status_code": 404}
[2025-10-15 12:22:27,702] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/users/", "query_params": {}, "body": {}}
[2025-10-15 12:22:27,705] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/users/", "status_code": 404}
[2025-10-15 12:22:49,532] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/users/register/", "query_params": {}, "body": {}}
[2025-10-15 12:22:49,644] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/users/register/", "status_code": 405}
[2025-10-15 12:24:16,792] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "POST", "path": "/users/register/", "query_params": {}, "body": "<unreadable body>"}
[2025-10-15 12:24:16,835] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "POST", "path": "/users/register/", "status_code": 400}
[2025-10-15 12:24:26,190] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "POST", "path": "/users/register/", "query_params": {}, "body": "<unreadable body>"}
[2025-10-15 12:24:42,331] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "POST", "path": "/users/register/", "query_params": {}, "body": "<unreadable body>"}
[2025-10-15 12:24:42,337] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "POST", "path": "/users/register/", "status_code": 400}
[2025-10-15 12:24:42,910] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "POST", "path": "/users/register/", "status_code": 201}
[2025-10-15 12:24:50,040] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "POST", "path": "/users/register/", "query_params": {}, "body": "<unreadable body>"}
[2025-10-15 12:24:55,638] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "POST", "path": "/users/register/", "query_params": {}, "body": "<unreadable body>"}
[2025-10-15 12:24:55,643] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "POST", "path": "/users/register/", "status_code": 400}
[2025-10-15 12:25:01,059] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "POST", "path": "/users/register/", "query_params": {}, "body": "<unreadable body>"}
[2025-10-15 12:25:01,064] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "POST", "path": "/users/register/", "status_code": 400}
[2025-10-15 12:25:03,244] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "POST", "path": "/users/register/", "query_params": {}, "body": "<unreadable body>"}
[2025-10-15 12:25:03,249] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "POST", "path": "/users/register/", "status_code": 400}
[2025-10-15 12:25:06,721] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "POST", "path": "/users/register/", "status_code": 201}
[2025-10-15 12:25:23,270] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "POST", "path": "/users/register/", "query_params": {}, "body": "<unreadable body>"}
[2025-10-15 12:25:35,164] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "POST", "path": "/users/register/", "query_params": {}, "body": "<unreadable body>"}
[2025-10-15 12:25:35,169] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "POST", "path": "/users/register/", "status_code": 400}
[2025-10-15 12:25:39,911] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "POST", "path": "/users/register/", "status_code": 201}
[2025-10-15 12:25:48,334] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "POST", "path": "/users/register/", "query_params": {}, "body": "<unreadable body>"}
[2025-10-15 12:25:48,339] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "POST", "path": "/users/register/", "status_code": 400}
[2025-10-15 12:25:57,482] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "OPTIONS", "path": "/users/register/", "query_params": {}, "body": {}}
[2025-10-15 12:25:57,486] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "OPTIONS", "path": "/users/register/", "status_code": 200}
[2025-10-15 12:25:58,479] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "OPTIONS", "path": "/users/register/", "query_params": {}, "body": {}}
[2025-10-15 12:25:58,483] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "OPTIONS", "path": "/users/register/", "status_code": 200}
[2025-10-15 12:25:59,128] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "OPTIONS", "path": "/users/register/", "query_params": {}, "body": {}}
[2025-10-15 12:25:59,132] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "OPTIONS", "path": "/users/register/", "status_code": 200}
[2025-10-15 12:26:32,254] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "POST", "path": "/users/register/", "query_params": {}, "body": "<unreadable body>"}
[2025-10-15 12:26:48,984] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "POST", "path": "/users/register/", "status_code": 201}
[2025-10-15 12:46:21,015] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/users/register/", "query_params": {}, "body": {}}
[2025-10-15 12:46:21,019] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/users/register/", "status_code": 405}
[2025-10-15 12:46:22,909] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/users/", "query_params": {}, "body": {}}
[2025-10-15 12:46:22,912] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/users/", "status_code": 404}
[2025-10-15 12:46:32,617] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/users/verify-email/", "query_params": {}, "body": {}}
[2025-10-15 12:46:32,673] [ERROR] [common] {"type": "exception", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/users/verify-email/", "query_params": {}, "body": {}, "exception": "'NoneType' object has no attribute 'encode'", "traceback": "Traceback (most recent call last):\n  File \"E:\\Python\\Lib\\site-packages\\django\\core\\handlers\\base.py\", line 197, in _get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n  File \"E:\\Python\\Lib\\site-packages\\django\\views\\decorators\\csrf.py\", line 65, in _view_wrapper\n    return view_func(request, *args, **kwargs)\n  File \"E:\\Python\\Lib\\site-packages\\django\\views\\generic\\base.py\", line 105, in view\n    return self.dispatch(request, *args, **kwargs)\n           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python\\Lib\\site-packages\\rest_framework\\views.py\", line 515, in dispatch\n    response = self.handle_exception(exc)\n  File \"E:\\Python\\Lib\\site-packages\\rest_framework\\views.py\", line 475, in handle_exception\n    self.raise_uncaught_exception(exc)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^\n  File \"E:\\Python\\Lib\\site-packages\\rest_framework\\views.py\", line 486, in raise_uncaught_exception\n    raise exc\n  File \"E:\\Python\\Lib\\site-packages\\rest_framework\\views.py\", line 512, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"E:\\2VAKIL\\AloVakil\\users\\views.py\", line 49, in get\n    uid = force_str(urlsafe_base64_decode(uidb64))\n                    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^\n  File \"E:\\Python\\Lib\\site-packages\\django\\utils\\http.py\", line 191, in urlsafe_base64_decode\n    s = s.encode()\n        ^^^^^^^^\nAttributeError: 'NoneType' object has no attribute 'encode'\n"}
[2025-10-15 12:46:32,724] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/users/verify-email/", "status_code": 500}
[2025-10-15 12:47:27,297] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/users/login/", "query_params": {}, "body": {}}
[2025-10-15 12:47:27,300] [INFO] [common] {"type": "request_end", "user": "Anonymous", "method": "GET", "path": "/users/login/", "status_code": 405}
[2025-10-15 12:48:22,563] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "POST", "path": "/users/login/", "query_params": {}, "body": "<unreadable body>"}
[2025-10-15 12:48:22,989] [INFO] [common] {"type": "request_end", "user": "Anonymous", "method": "POST", "path": "/users/login/", "status_code": 200}
[2025-10-15 12:48:35,372] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/users/login/", "query_params": {}, "body": {}}
[2025-10-15 12:48:35,375] [INFO] [common] {"type": "request_end", "user": "Anonymous", "method": "GET", "path": "/users/login/", "status_code": 405}
[2025-10-15 12:48:47,461] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/users/token/refresh/", "query_params": {}, "body": {}}
[2025-10-15 12:48:47,464] [INFO] [common] {"type": "request_end", "user": "Anonymous", "method": "GET", "path": "/users/token/refresh/", "status_code": 405}
[2025-10-15 12:56:49,907] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/users/logout/", "query_params": {}, "body": {}}
[2025-10-15 12:56:49,910] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/users/logout/", "status_code": 405}
[2025-10-15 12:57:07,920] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/users/profile/client/", "query_params": {}, "body": {}}
[2025-10-15 12:57:24,317] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/users/profile/client/", "status_code": 200}
[2025-10-15 12:57:45,906] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/users/profile/lawyer/", "query_params": {}, "body": {}}
[2025-10-15 12:57:45,926] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/users/profile/lawyer/", "status_code": 200}
[2025-10-15 12:58:17,191] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/users/change-password/", "query_params": {}, "body": {}}
[2025-10-15 12:58:17,194] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/users/change-password/", "status_code": 405}
[2025-10-15 12:58:41,936] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/users/lawyers/", "query_params": {}, "body": {}}
[2025-10-15 12:58:41,955] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/users/lawyers/", "status_code": 200}
[2025-10-15 12:58:52,999] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/users/password-reset/", "query_params": {}, "body": {}}
[2025-10-15 12:58:53,002] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/users/password-reset/", "status_code": 405}
[2025-10-15 12:58:57,137] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "POST", "path": "/users/password-reset/", "query_params": {}, "body": "<unreadable body>"}
[2025-10-15 12:59:01,258] [ERROR] [common] {"type": "exception", "user": "allanlondon19452122@gmail.com", "method": "POST", "path": "/users/password-reset/", "query_params": {}, "body": "<unreadable body>", "exception": "[WinError 10061] No connection could be made because the target machine actively refused it", "traceback": "Traceback (most recent call last):\n  File \"E:\\Python\\Lib\\site-packages\\django\\core\\handlers\\base.py\", line 197, in _get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n  File \"E:\\Python\\Lib\\site-packages\\django\\views\\decorators\\csrf.py\", line 65, in _view_wrapper\n    return view_func(request, *args, **kwargs)\n  File \"E:\\Python\\Lib\\site-packages\\django\\views\\generic\\base.py\", line 105, in view\n    return self.dispatch(request, *args, **kwargs)\n           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python\\Lib\\site-packages\\rest_framework\\views.py\", line 515, in dispatch\n    response = self.handle_exception(exc)\n  File \"E:\\Python\\Lib\\site-packages\\rest_framework\\views.py\", line 475, in handle_exception\n    self.raise_uncaught_exception(exc)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^\n  File \"E:\\Python\\Lib\\site-packages\\rest_framework\\views.py\", line 486, in raise_uncaught_exception\n    raise exc\n  File \"E:\\Python\\Lib\\site-packages\\rest_framework\\views.py\", line 512, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"E:\\2VAKIL\\AloVakil\\users\\views.py\", line 159, in post\n    send_mail(\n    ~~~~~~~~~^\n        \"Password Reset Request\",\n        ^^^^^^^^^^^^^^^^^^^^^^^^^\n    ...<3 lines>...\n        fail_silently=False,\n        ^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"E:\\Python\\Lib\\site-packages\\django\\core\\mail\\__init__.py\", line 92, in send_mail\n    return mail.send()\n           ~~~~~~~~~^^\n  File \"E:\\Python\\Lib\\site-packages\\django\\core\\mail\\message.py\", line 307, in send\n    return self.get_connection(fail_silently).send_messages([self])\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^\n  File \"E:\\Python\\Lib\\site-packages\\django\\core\\mail\\backends\\smtp.py\", line 128, in send_messages\n    new_conn_created = self.open()\n  File \"E:\\Python\\Lib\\site-packages\\django\\core\\mail\\backends\\smtp.py\", line 86, in open\n    self.connection = self.connection_class(\n                      ~~~~~~~~~~~~~~~~~~~~~^\n        self.host, self.port, **connection_params\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"E:\\Python\\Lib\\smtplib.py\", line 255, in __init__\n    (code, msg) = self.connect(host, port)\n                  ~~~~~~~~~~~~^^^^^^^^^^^^\n  File \"E:\\Python\\Lib\\smtplib.py\", line 341, in connect\n    self.sock = self._get_socket(host, port, self.timeout)\n                ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python\\Lib\\smtplib.py\", line 312, in _get_socket\n    return socket.create_connection((host, port), timeout,\n           ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^\n                                    self.source_address)\n                                    ^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python\\Lib\\socket.py\", line 864, in create_connection\n    raise exceptions[0]\n  File \"E:\\Python\\Lib\\socket.py\", line 849, in create_connection\n    sock.connect(sa)\n    ~~~~~~~~~~~~^^^^\nConnectionRefusedError: [WinError 10061] No connection could be made because the target machine actively refused it\n"}
[2025-10-15 12:59:01,279] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "POST", "path": "/users/password-reset/", "status_code": 500}
[2025-10-15 12:59:53,604] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/users/password-reset-confirm/", "query_params": {}, "body": {}}
[2025-10-15 12:59:53,607] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/users/password-reset-confirm/", "status_code": 405}
[2025-10-15 13:07:32,644] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/", "query_params": {}, "body": {}}
[2025-10-15 13:07:32,647] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/", "status_code": 404}
[2025-10-15 13:08:01,112] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/users/verify-email/", "query_params": {}, "body": {}}
[2025-10-15 13:08:01,113] [ERROR] [common] {"type": "exception", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/users/verify-email/", "query_params": {}, "body": {}, "exception": "'NoneType' object has no attribute 'encode'", "traceback": "Traceback (most recent call last):\n  File \"E:\\Python\\Lib\\site-packages\\django\\core\\handlers\\base.py\", line 197, in _get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n  File \"E:\\Python\\Lib\\site-packages\\django\\views\\decorators\\csrf.py\", line 65, in _view_wrapper\n    return view_func(request, *args, **kwargs)\n  File \"E:\\Python\\Lib\\site-packages\\django\\views\\generic\\base.py\", line 105, in view\n    return self.dispatch(request, *args, **kwargs)\n           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python\\Lib\\site-packages\\rest_framework\\views.py\", line 515, in dispatch\n    response = self.handle_exception(exc)\n  File \"E:\\Python\\Lib\\site-packages\\rest_framework\\views.py\", line 475, in handle_exception\n    self.raise_uncaught_exception(exc)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^\n  File \"E:\\Python\\Lib\\site-packages\\rest_framework\\views.py\", line 486, in raise_uncaught_exception\n    raise exc\n  File \"E:\\Python\\Lib\\site-packages\\rest_framework\\views.py\", line 512, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"E:\\2VAKIL\\AloVakil\\users\\views.py\", line 49, in get\n    uid = force_str(urlsafe_base64_decode(uidb64))\n                    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^\n  File \"E:\\Python\\Lib\\site-packages\\django\\utils\\http.py\", line 191, in urlsafe_base64_decode\n    s = s.encode()\n        ^^^^^^^^\nAttributeError: 'NoneType' object has no attribute 'encode'\n"}
[2025-10-15 13:08:01,129] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/users/verify-email/", "status_code": 500}
[2025-10-15 23:25:54,723] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/", "query_params": {}, "body": {}}
[2025-10-15 23:25:54,736] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/", "status_code": 404}
[2025-10-15 23:25:54,864] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/favicon.ico", "query_params": {}, "body": {}}
[2025-10-15 23:25:54,867] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/favicon.ico", "status_code": 404}
[2025-10-15 23:30:28,604] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/users/", "query_params": {}, "body": {}}
[2025-10-15 23:30:28,607] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/users/", "status_code": 404}
[2025-10-15 23:30:39,195] [INFO] [common] {"type": "request_start", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/users/register/", "query_params": {}, "body": {}}
[2025-10-15 23:30:39,304] [INFO] [common] {"type": "request_end", "user": "allanlondon19452122@gmail.com", "method": "GET", "path": "/users/register/", "status_code": 405}
[2025-10-15 23:55:10,529] [INFO] [common] {"type": "request_start", "user": "Anonymous", "method": "GET", "path": "/users/register/", "query_params": {}, "body": {}}
[2025-10-15 23:55:10,556] [INFO] [common] {"type": "request_end", "user": "Anonymous", "method": "GET", "path": "/users/register/", "status_code": 405}
